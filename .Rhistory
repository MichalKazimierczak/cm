cities<-rbind(cities,uc)
cities$ASCII.Name<-stringr::str_replace_all(cities$ASCII.Name, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$ASCII.Name<-stringr::str_replace_all(cities$ASCII.Name,"\\s+"," ")
cities$Alternate.Name<-stringr::str_replace_all(cities$Alternate.Name, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$Alternate.Names<-stringr::str_replace_all(cities$Alternate.Names, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$Alternate.Names<-stringr::str_replace_all(cities$Alternate.Names,"\\s+"," ")
cities$ASCII.Name<-stringi::stri_trans_general(cities$ASCII.Name, "latin-ascii; upper")
cities$Alternate.Names<-stringi::stri_trans_general(cities$Alternate.Names, "latin-ascii; upper")
cities$ASCII.Name<-str_trim(cities$ASCII.Name)
cities$Alternate.Names<-str_trim(cities$Alternate.Names)
library(stringr)
cities$ASCII.Name<-str_trim(cities$ASCII.Name)
cities$Alternate.Names<-str_trim(cities$Alternate.Names)
cities<-unique(cities)
cities$o<-ifelse(cities$ASCII.Name==cities$Alternate.Names,T,F)
cities$l<-nchar(cities$Alternate.Names)
cities<-cities[order(cities$o,cities$l,decreasing=T),]
cities<-data.table(cities)
library(data.table)
cities<-data.table(cities)
cities <-cities[,list(alt_names=paste(Alternate.Names,collapse="( |$)|( |^)")),by=.(ASCII.Name,Country.Code)]
cities$alt_names<-str_replace(cities$alt_names,"^","(^| )")
cities$alt_names<-str_replace_all(cities$alt_names,"$","( |$)")
cities$alt_names<-str_replace_all(cities$alt_names,"|","(^| )|( |$)")
View(cities)
cities<-read.csv("Y:/ESS/IP impact/2024_firm_level/data/other_data/geonames-all-cities-with-a-population-1000.csv",sep=";")
cities<-cities[,c("ASCII.Name","Alternate.Names","Country.Code")]
cities<-cities[cities$Country.Code%in%eu_countries$code,]
cities<-separate_rows(cities,2,sep=",")
cities$Alternate.Names<-ifelse(cities$Alternate.Names=="",cities$ASCII.Name,cities$Alternate.Names)
uc<-unique(cities[,c("ASCII.Name","Country.Code")])
uc$Alternate.Names<-uc$ASCII.Name
cities<-rbind(cities,uc)
cities$ASCII.Name<-stringr::str_replace_all(cities$ASCII.Name, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$ASCII.Name<-stringr::str_replace_all(cities$ASCII.Name,"\\s+"," ")
cities$Alternate.Names<-stringr::str_replace_all(cities$Alternate.Names, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$Alternate.Names<-stringr::str_replace_all(cities$Alternate.Names,"\\s+"," ")
cities$ASCII.Name<-stringi::stri_trans_general(cities$ASCII.Name, "latin-ascii; upper")
cities$Alternate.Names<-stringi::stri_trans_general(cities$Alternate.Names, "latin-ascii; upper")
cities$ASCII.Name<-str_trim(cities$ASCII.Name)
cities$Alternate.Names<-str_trim(cities$Alternate.Names)
cities<-unique(cities)
cities$o<-ifelse(cities$ASCII.Name==cities$Alternate.Names,T,F)
cities$l<-nchar(cities$Alternate.Names)
cities<-cities[order(cities$o,cities$l,decreasing=T),]
View(cities)
cities<-data.table(cities)
cities <-cities[,list(alt_names=paste(Alternate.Names,collapse="( |$)|( |^)")),by=.(ASCII.Name,Country.Code)]
View(cities)
cities$alt_names<-str_replace(cities$alt_names,"^","(^| )")
cities$alt_names<-str_replace_all(cities$alt_names,"$","( |$)")
View(cities)
save(cities,file="Y:/ESS/IP impact/Functions/cm/data/cities.rda")
detach("package:CleanMatch", unload = TRUE)
library(devtools)
install_github("MichalKazimierczak/cm",force=T)
library(CleanMatch)
View(d)
d<-harmonize_cities(d,"orb_city","euipo_city","AT")
r<-d
r$city_a<-r$orb_city
r$city_b<-r$euipo_city
data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]
city_a<-r[,"city_a"]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
harmonize_cities<-function(r,city_a,city_b,cc){
data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-str_trim(r[,city_a])
r[,city_b]<-str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
# for (i in 1:nrow(citiesc)){
#   cit<-citiesc[i,"alt_names"]
#   r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
#   r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
#   print(i)
# }
return(r)
}
d<-harmonize_cities(d,"orb_city","euipo_city","AT")
harmonize_cities<-function(r,city_a,city_b,cc){
data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
# for (i in 1:nrow(citiesc)){
#   cit<-citiesc[i,"alt_names"]
#   r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
#   r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
#   print(i)
# }
return(r)
}
d<-harmonize_cities(d,"orb_city","euipo_city","AT")
View(d)
cit<-citiesc[i,"alt_names"]
harmonize_cities<-function(r,city_a,city_b,cc){
data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
for (i in 1:nrow(citiesc)){
cit<-as.character(citiesc[i,"alt_names"])
r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
print(i)
}
return(r)
}
d<-harmonize_cities(d,"orb_city","euipo_city","AT")
gc()
harmonize_cities<-function(r,city_a,city_b,cc){
data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
for (i in 1:nrow(citiesc)){
cit<-as.character(citiesc[i,"alt_names"])
r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
print(i)
}
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
return(r)
}
d<-harmonize_cities(d,"orb_city","euipo_city","AT")
View(d)
cities<-read.csv("Y:/ESS/IP impact/2024_firm_level/data/other_data/geonames-all-cities-with-a-population-1000.csv",sep=";")
cities<-cities[,c("ASCII.Name","Alternate.Names","Country.Code")]
cities<-cities[cities$Country.Code%in%eu_countries$code,]
cities<-rbind(cities,uc)
cities$ASCII.Name<-stringr::str_replace_all(cities$ASCII.Name, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$ASCII.Name<-stringr::str_replace_all(cities$ASCII.Name,"\\s+"," ")
cities$Alternate.Names<-stringr::str_replace_all(cities$Alternate.Names, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$Alternate.Names<-stringr::str_replace_all(cities$Alternate.Names,"\\s+"," ")
cities$ASCII.Name<-stringi::stri_trans_general(cities$ASCII.Name, "latin-ascii; upper")
cities$Alternate.Names<-stringi::stri_trans_general(cities$Alternate.Names, "latin-ascii; upper")
cities$ASCII.Name<-str_trim(cities$ASCII.Name)
cities$Alternate.Names<-str_trim(cities$Alternate.Names)
cities<-unique(cities)
cities$o<-ifelse(cities$ASCII.Name==cities$Alternate.Names,T,F)
cities$l<-nchar(cities$Alternate.Names)
cities<-cities[order(cities$o,cities$l,decreasing=T),]
library(stringr)
cities<-read.csv("Y:/ESS/IP impact/2024_firm_level/data/other_data/geonames-all-cities-with-a-population-1000.csv",sep=";")
cities<-cities[,c("ASCII.Name","Alternate.Names","Country.Code")]
cities<-cities[cities$Country.Code%in%eu_countries$code,]
library(eurostat)
cities<-read.csv("Y:/ESS/IP impact/2024_firm_level/data/other_data/geonames-all-cities-with-a-population-1000.csv",sep=";")
cities<-cities[,c("ASCII.Name","Alternate.Names","Country.Code")]
cities<-cities[cities$Country.Code%in%eu_countries$code,]
cities<-separate_rows(cities,2,sep=",")
library(tidyr)
cities<-read.csv("Y:/ESS/IP impact/2024_firm_level/data/other_data/geonames-all-cities-with-a-population-1000.csv",sep=";")
cities<-cities[,c("ASCII.Name","Alternate.Names","Country.Code")]
cities<-cities[cities$Country.Code%in%eu_countries$code,]
cities<-separate_rows(cities,2,sep=",")
cities$Alternate.Names<-ifelse(cities$Alternate.Names=="",cities$ASCII.Name,cities$Alternate.Names)
uc<-unique(cities[,c("ASCII.Name","Country.Code")])
uc$Alternate.Names<-uc$ASCII.Name
cities<-rbind(cities,uc)
cities$ASCII.Name<-stringr::str_replace_all(cities$ASCII.Name, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$ASCII.Name<-stringr::str_replace_all(cities$ASCII.Name,"\\s+"," ")
cities$Alternate.Names<-stringr::str_replace_all(cities$Alternate.Names, "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
cities$Alternate.Names<-stringr::str_replace_all(cities$Alternate.Names,"\\s+"," ")
cities$ASCII.Name<-stringi::stri_trans_general(cities$ASCII.Name, "latin-ascii; upper")
cities$Alternate.Names<-stringi::stri_trans_general(cities$Alternate.Names, "latin-ascii; upper")
cities$ASCII.Name<-str_trim(cities$ASCII.Name)
cities$Alternate.Names<-str_trim(cities$Alternate.Names)
cities<-unique(cities)
cities$o<-ifelse(cities$ASCII.Name==cities$Alternate.Names,T,F)
cities$l<-nchar(cities$Alternate.Names)
cities<-cities[order(cities$o,cities$l,decreasing=T),]
# cities<-data.table(cities)
# cities <-cities[,list(alt_names=paste(Alternate.Names,collapse="( |$)|( |^)")),by=.(ASCII.Name,Country.Code)]
# cities$alt_names<-str_replace(cities$alt_names,"^","(^| )")
# cities$alt_names<-str_replace_all(cities$alt_names,"$","( |$)")
cities$Alternate.Names<-paste0("(^| )",cities$Alternate.Names,"( |$)")
View(cities)
harmonize_cities<-function(r,city_a,city_b,cc){
data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
for (i in 1:nrow(citiesc)){
cit<-as.character(citiesc[i,"alt_names"])
r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
print(i)
}
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
return(r)
}
harmonize_cities<-function(r,city_a,city_b,cc){
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
for (i in 1:nrow(citiesc)){
cit<-as.character(citiesc[i,"alt_names"])
r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
print(i)
}
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
return(r)
}
d<-harmonize_cities(d,"orb_city","euipo_city","AT")
harmonize_cities<-function(r,city_a,city_b,cc){
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
for (i in 1:nrow(citiesc)){
cit<-as.character(citiesc[i,"Alternate.Names"])
r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
print(i)
}
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
return(r)
}
d<-harmonize_cities(d,"orb_city","euipo_city","AT")
View(d)
#' @param prefer_root logical variable indicating whether the ORBIS observations with the bvd_id number without hyphen should be preferred
#' @param bvd_is_root weight assigned to the criterion of bvd_id_number not to include hyphen
#' @param name_sim weight assigned to the similarity of original names
#' @param lf_sim weight assigned to the similarity of legal forms
#' @param reg_sim weight assigned to the similarity of seat regions as shown in respective datasets
#' @param city_sim weight assigned to the similarity of cities of seat as shown in respective datasets
#' @param street_sim weight assigned to the similarity of cities of seat as shown in respective datasets
#' @returns an original dataframe with ordered and ranked matched dataframe
#' @examples
#' @export
d<-d[,19:22]
library(stringr)
library(data.table)
library(eurostat)
library(tidyr)
library(plyr)
setwd("Y:/ESS/IP impact/2024_firm_level/data/matched/plain")
lista<-list.files()
###Start with EUIPO disambiguation
lista_euipo<-lista[str_detect(lista,"euipo")]
i<-lista_euipo[1]
d<-readRDS(i)
da<-harmonize_cities(d,"orb_city","euipo_city","AT")
cc<-str_extract(i,"^[A-Z]{2,2}")
oa<-readRDS(paste0("Y:/ESS/ORBIS/2023/clean/",cc,"/all_addresses.rds"))
oc<-readRDS(paste0("Y:/ESS/ORBIS/2023/clean/",cc,"/contact_info.rds"))
oa<-oa[oa$bvd_id_number%in%d$bvd_id_number,c("bvd_id_number","postcode","city","street_no_building_etc_line_1")]
colnames(oa)<-c("bvd_id_number","orb_postcode","orb_city","orb_street")
oa<-merge(oa,oc[,c("bvd_id_number","nuts3")],all.x=T)
remove(oc)
gc()
d<-merge(d,oa,by="bvd_id_number",all.x=T)
#####get data from euipo database
e<-readRDS("Y:/ESS/IP impact/2024_firm_level/data/IPR_data/euipo_owners_2024-03-21.rds")
e<-e[e$OWNER_CODE%in%d$OWNER_CODE,c("OWNER_CODE","ID_TOWN","NM_TOWN","ADOWNER")]
colnames(e)<-c("OWNER_CODE","euipo_postcode","euipo_city","euipo_street")
d<-merge(d,e,by="OWNER_CODE",all.x=T)
da<-harmonize_cities(d,"orb_city","euipo_city","AT")
View(d)
da<-harmonize_cities(d,"orb_city","euipo_city","AT")
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
da<-harmonize_cities(d,"orb_city","euipo_city","AT")
View(da)
cla<-str_detect(city_a,colnames(r))
da<-harmonize_cities(d,"orb_city","euipo_city","AT",new_col=T)
harmonize_cities<-function(r,city_a,city_b,cc,new_col=T){
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
# for (i in 1:nrow(citiesc)){
#   cit<-as.character(citiesc[i,"Alternate.Names"])
#   r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
#   r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
# }
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
if(new_col=T){
harmonize_cities<-function(r,city_a,city_b,cc,new_col=T){
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
# for (i in 1:nrow(citiesc)){
#   cit<-as.character(citiesc[i,"Alternate.Names"])
#   r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
#   r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
# }
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
if(new_col==T){
cla<-str_detect(city_a,colnames(r))
}
return(r)
}
da<-harmonize_cities(d,"orb_city","euipo_city","AT",new_col=T)
harmonize_cities<-function(r,city_a,city_b,cc,new_col=T){
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
# for (i in 1:nrow(citiesc)){
#   cit<-as.character(citiesc[i,"Alternate.Names"])
#   r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
#   r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
# }
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
if(new_col==T){
cla<-str_detect(city_a,colnames(r))
}
return(cla)
}
da<-harmonize_cities(d,"orb_city","euipo_city","AT",new_col=T)
da
harmonize_cities<-function(r,city_a,city_b,cc,new_col=T){
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
# for (i in 1:nrow(citiesc)){
#   cit<-as.character(citiesc[i,"Alternate.Names"])
#   r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
#   r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
# }
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
if(new_col==T){
cla<-paste0(colnames(r)[str_detect(city_a,colnames(r))],"_harmonized")
clb<-paste0(colnames(r)[str_detect(city_b,colnames(r))],"_harmonized")
}
return(clb)
}
da<-harmonize_cities(d,"orb_city","euipo_city","AT",new_col=T)
cla
harmonize_cities<-function(r,city_a,city_b,cc,new_col=T){
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
# for (i in 1:nrow(citiesc)){
#   cit<-as.character(citiesc[i,"Alternate.Names"])
#   r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
#   r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
# }
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
if(new_col==T){
cla<-paste0(colnames(r)[str_detect(city_a,colnames(r))],"_harmonized")
colnames(r)[str_detect(r),"city_norm_a"]<-cla
clb<-paste0(colnames(r)[str_detect(city_b,colnames(r))],"_harmonized")
colnames(r)[str_detect(r),"city_norm_b"]<-clb
} else{
r[,city_a]<-r$city_norm_a
r[,city_b]<-r$city_norm_b
r$city_norm_a<-NULL
r$city_norm_b<-NULL
}
return(r)
}
da<-harmonize_cities(d,"orb_city","euipo_city","AT",new_col=T)
harmonize_cities<-function(r,city_a,city_b,cc,new_col=T){
#data(cities)
citiesc<-cities[cities$Country.Code==cc,]
r[,city_a]<-stringr::str_replace_all(r[,city_a], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_a]<-stringr::str_replace_all(r[,city_a],"\\s+"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b], "[^a-zA-Zα-ωΑ-Ωa-яA-Я]"," ")
r[,city_b]<-stringr::str_replace_all(r[,city_b],"\\s+"," ")
r[,city_a]<-stringi::stri_trans_general(r[,city_a], "latin-ascii; upper")
r[,city_b]<-stringi::stri_trans_general(r[,city_b], "latin-ascii; upper")
r[,city_a]<-stringr::str_trim(r[,city_a])
r[,city_b]<-stringr::str_trim(r[,city_b])
r$city_norm_a<-""
r$city_norm_b<-""
# for (i in 1:nrow(citiesc)){
#   cit<-as.character(citiesc[i,"Alternate.Names"])
#   r$city_norm_a<-ifelse(r$city_norm_a==""&stringr::str_detect(r[,city_a],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_a)
#   r$city_norm_b<-ifelse(r$city_norm_b==""&stringr::str_detect(r[,city_b],cit),as.character(citiesc[i,"ASCII.Name"]),r$city_norm_b)
# }
r$city_norm_a<-ifelse(r$city_norm_a=="",r[,city_a],r$city_norm_a)
r$city_norm_b<-ifelse(r$city_norm_b=="",r[,city_b],r$city_norm_b)
if(new_col==T){
cla<-paste0(colnames(r)[str_detect(city_a,colnames(r))],"_harmonized")
colnames(r)[str_detect(colnames(r),"city_norm_a")]<-cla
clb<-paste0(colnames(r)[str_detect(city_b,colnames(r))],"_harmonized")
colnames(r)[str_detect(colnames(r),"city_norm_b")]<-clb
} else{
r[,city_a]<-r$city_norm_a
r[,city_b]<-r$city_norm_b
r$city_norm_a<-NULL
r$city_norm_b<-NULL
}
return(r)
}
da<-harmonize_cities(d,"orb_city","euipo_city","AT",new_col=T)
View(da)
da<-harmonize_cities(d,"orb_city","euipo_city","AT",new_col=F)
View(da)
setwd("Y:/ESS/IP impact/Functions/cm")
library(roxygen2)
roxygenise()
library(devtools)
install_github("MichalKazimierczak/cm",force=T)
library(devtools)
install_github("MichalKazimierczak/cm",force=T)
